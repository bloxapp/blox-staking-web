[{"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/index.js":"1","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/reportWebVitals.js":"2","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/theme.ts":"3","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/styles/global-styles.js":"4","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/App.tsx":"5","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/index.ts":"6","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/index.ts":"7","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/index.ts":"8","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Header/index.ts":"9","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/Authentication.tsx":"10","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/StakingDeposit.tsx":"11","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Header/Header.tsx":"12","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/constants.ts":"13","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/constants.ts":"14","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/useModals.ts":"15","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/index.ts":"16","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/components/index.ts":"17","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/index.ts":"18","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/helpers/getParsedQueryString.ts":"19","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/Auth/index.ts":"20","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/components/BackToDesktop.tsx":"21","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/ModalsManager.tsx":"22","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/components/ConnectingTo.tsx":"23","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Section.tsx":"24","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Title.tsx":"25","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/SubTitle.tsx":"26","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Total.tsx":"27","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/NeedGoETH.tsx":"28","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Wrapper.tsx":"29","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ErrorMessage.tsx":"30","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/DepositMethod.tsx":"31","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/Auth/constants.ts":"32","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/BrowserNotSupported/index.ts":"33","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/TrezorModal/index.ts":"34","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectedWallet/index.ts":"35","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepsBoxes/index.ts":"36","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/DepositFinished/index.ts":"37","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepBox/index.ts":"38","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/MetaMaskNotFoundModal/index.ts":"39","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/index.ts":"40","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/WrongNetworkModal/index.ts":"41","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/LedgerModal/index.ts":"42","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectWalletButton/index.ts":"43","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/Auth/Auth.ts":"44","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/LedgerModal/LedgerModal.tsx":"45","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectWalletButton/ConnectWalletButton.tsx":"46","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/Faq.tsx":"47","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/WrongNetworkModal/WrongNetworkModal.tsx":"48","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectedWallet/ConnectedWallet.tsx":"49","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepBox/StepBox.tsx":"50","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/MetaMaskNotFoundModal/MetaMaskNotFoundModal.tsx":"51","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/DepositFinished/DepositFinished.tsx":"52","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepsBoxes/StepsBoxes.tsx":"53","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/TrezorModal/TrezorModal.tsx":"54","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/BrowserNotSupported/BrowserNotSupported.tsx":"55","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/service.ts":"56","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/helpers/truncateText.ts":"57","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/constants.ts":"58","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectWalletButton/images/index.ts":"59","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/index.ts":"60","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CustomModal/index.ts":"61","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/index.ts":"62","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CustomModal/CustomModal.tsx":"63","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/Wrapper.js":"64","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/SmallText.js":"65","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/Description.js":"66","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Link/index.ts":"67","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/Title.js":"68","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CopyToClipboardIcon/index.js":"69","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/index.ts":"70","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Checkbox/index.ts":"71","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/InfoWithTooltip/index.ts":"72","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Spinner/index.ts":"73","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/UniqueUrl/index.ts":"74","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Tooltip/index.ts":"75","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Icon/index.ts":"76","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Button/index.ts":"77","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Link/Link.tsx":"78","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CopyToClipboardIcon/CopyToClipboardIcon.js":"79","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Tooltip/Tooltip.js":"80","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/ModalTemplate.tsx":"81","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Icon/Icon.tsx":"82","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Button/Button.tsx":"83","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/UniqueUrl/UniqueUrl.tsx":"84","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Spinner/Spinner.tsx":"85","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/InfoWithTooltip/InfoWithTooltip.tsx":"86","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Checkbox/Checkbox.tsx":"87","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/SecurityNotification.tsx":"88","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/WalletProvidersContext.ts":"89","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Metamask/constants.ts":"90","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Metamask/MetaMaskStrategy.ts":"91","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Portis/PortisStrategy.ts":"92","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Portis/constants.ts":"93","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/WalletProviderStrategy.ts":"94"},{"size":717,"mtime":1608107353243,"results":"95","hashOfConfig":"96"},{"size":362,"mtime":1608107353243,"results":"97","hashOfConfig":"96"},{"size":3421,"mtime":1608557301781,"results":"98","hashOfConfig":"96"},{"size":880,"mtime":1608107353238,"results":"99","hashOfConfig":"96"},{"size":564,"mtime":1608557301746,"results":"100","hashOfConfig":"96"},{"size":169,"mtime":1608107353242,"results":"101","hashOfConfig":"96"},{"size":43,"mtime":1608107353240,"results":"102","hashOfConfig":"96"},{"size":43,"mtime":1608107353242,"results":"103","hashOfConfig":"96"},{"size":35,"mtime":1608107353240,"results":"104","hashOfConfig":"96"},{"size":1950,"mtime":1609248013906,"results":"105","hashOfConfig":"96"},{"size":15077,"mtime":1609858705300,"results":"106","hashOfConfig":"96"},{"size":817,"mtime":1608107353240,"results":"107","hashOfConfig":"96"},{"size":252,"mtime":1608557301778,"results":"108","hashOfConfig":"96"},{"size":223,"mtime":1608655912293,"results":"109","hashOfConfig":"96"},{"size":499,"mtime":1608655912294,"results":"110","hashOfConfig":"96"},{"size":42,"mtime":1608655912293,"results":"111","hashOfConfig":"96"},{"size":117,"mtime":1608107353240,"results":"112","hashOfConfig":"96"},{"size":1147,"mtime":1609057686947,"results":"113","hashOfConfig":"96"},{"size":158,"mtime":1608107353238,"results":"114","hashOfConfig":"96"},{"size":137,"mtime":1608107353244,"results":"115","hashOfConfig":"96"},{"size":1015,"mtime":1608557309843,"results":"116","hashOfConfig":"96"},{"size":1157,"mtime":1609157184697,"results":"117","hashOfConfig":"96"},{"size":842,"mtime":1608107353239,"results":"118","hashOfConfig":"96"},{"size":118,"mtime":1608557301772,"results":"119","hashOfConfig":"96"},{"size":153,"mtime":1608557301774,"results":"120","hashOfConfig":"96"},{"size":159,"mtime":1608557301774,"results":"121","hashOfConfig":"96"},{"size":170,"mtime":1608557301774,"results":"122","hashOfConfig":"96"},{"size":254,"mtime":1608557301771,"results":"123","hashOfConfig":"96"},{"size":241,"mtime":1608557301775,"results":"124","hashOfConfig":"96"},{"size":250,"mtime":1608557301769,"results":"125","hashOfConfig":"96"},{"size":146,"mtime":1608557301769,"results":"126","hashOfConfig":"96"},{"size":374,"mtime":1608107353243,"results":"127","hashOfConfig":"96"},{"size":49,"mtime":1608557301761,"results":"128","hashOfConfig":"96"},{"size":41,"mtime":1608658694455,"results":"129","hashOfConfig":"96"},{"size":44,"mtime":1608107353241,"results":"130","hashOfConfig":"96"},{"size":39,"mtime":1608107353242,"results":"131","hashOfConfig":"96"},{"size":45,"mtime":1608557301768,"results":"132","hashOfConfig":"96"},{"size":36,"mtime":1608107353241,"results":"133","hashOfConfig":"96"},{"size":51,"mtime":1608557301771,"results":"134","hashOfConfig":"96"},{"size":33,"mtime":1608735640255,"results":"135","hashOfConfig":"96"},{"size":47,"mtime":1608557301777,"results":"136","hashOfConfig":"96"},{"size":41,"mtime":1608658694444,"results":"137","hashOfConfig":"96"},{"size":48,"mtime":1608557301766,"results":"138","hashOfConfig":"96"},{"size":2236,"mtime":1608107353243,"results":"139","hashOfConfig":"96"},{"size":1271,"mtime":1608658694438,"results":"140","hashOfConfig":"96"},{"size":2525,"mtime":1609246289771,"results":"141","hashOfConfig":"96"},{"size":3595,"mtime":1609751330096,"results":"142","hashOfConfig":"96"},{"size":1338,"mtime":1609773072504,"results":"143","hashOfConfig":"96"},{"size":2753,"mtime":1609065166975,"results":"144","hashOfConfig":"96"},{"size":1085,"mtime":1608557301772,"results":"145","hashOfConfig":"96"},{"size":1309,"mtime":1609163479594,"results":"146","hashOfConfig":"96"},{"size":949,"mtime":1608557301768,"results":"147","hashOfConfig":"96"},{"size":8380,"mtime":1609751055657,"results":"148","hashOfConfig":"96"},{"size":1271,"mtime":1608658694445,"results":"149","hashOfConfig":"96"},{"size":1287,"mtime":1609233966577,"results":"150","hashOfConfig":"96"},{"size":242,"mtime":1608735640256,"results":"151","hashOfConfig":"96"},{"size":259,"mtime":1608107353238,"results":"152","hashOfConfig":"96"},{"size":2820,"mtime":1609057686945,"results":"153","hashOfConfig":"96"},{"size":245,"mtime":1608557301762,"results":"154","hashOfConfig":"96"},{"size":579,"mtime":1608735640244,"results":"155","hashOfConfig":"96"},{"size":41,"mtime":1608107353235,"results":"156","hashOfConfig":"96"},{"size":200,"mtime":1608107353237,"results":"157","hashOfConfig":"96"},{"size":1311,"mtime":1609774593485,"results":"158","hashOfConfig":"96"},{"size":111,"mtime":1608107353237,"results":"159","hashOfConfig":"96"},{"size":635,"mtime":1608107353236,"results":"160","hashOfConfig":"96"},{"size":188,"mtime":1608107353236,"results":"161","hashOfConfig":"96"},{"size":34,"mtime":1608735640239,"results":"162","hashOfConfig":"96"},{"size":231,"mtime":1608107353236,"results":"163","hashOfConfig":"96"},{"size":49,"mtime":1608107353235,"results":"164","hashOfConfig":"96"},{"size":43,"mtime":1608107353237,"results":"165","hashOfConfig":"96"},{"size":38,"mtime":1608107353234,"results":"166","hashOfConfig":"96"},{"size":45,"mtime":1608107353236,"results":"167","hashOfConfig":"96"},{"size":37,"mtime":1608557301757,"results":"168","hashOfConfig":"96"},{"size":39,"mtime":1608107353238,"results":"169","hashOfConfig":"96"},{"size":37,"mtime":1608107353237,"results":"170","hashOfConfig":"96"},{"size":34,"mtime":1608107353235,"results":"171","hashOfConfig":"96"},{"size":36,"mtime":1608107353234,"results":"172","hashOfConfig":"96"},{"size":193,"mtime":1608735640238,"results":"173","hashOfConfig":"96"},{"size":1120,"mtime":1608107353235,"results":"174","hashOfConfig":"96"},{"size":932,"mtime":1608107353237,"results":"175","hashOfConfig":"96"},{"size":1801,"mtime":1608107353236,"results":"176","hashOfConfig":"96"},{"size":1215,"mtime":1609783758991,"results":"177","hashOfConfig":"96"},{"size":518,"mtime":1608107353233,"results":"178","hashOfConfig":"96"},{"size":1122,"mtime":1608107353237,"results":"179","hashOfConfig":"96"},{"size":587,"mtime":1609065166973,"results":"180","hashOfConfig":"96"},{"size":724,"mtime":1608107353236,"results":"181","hashOfConfig":"96"},{"size":1169,"mtime":1608557301756,"results":"182","hashOfConfig":"96"},{"size":1099,"mtime":1609057686946,"results":"183","hashOfConfig":"96"},{"size":1898,"mtime":1609248072476,"results":"184","hashOfConfig":"96"},{"size":396,"mtime":1609065166995,"results":"185","hashOfConfig":"96"},{"size":3491,"mtime":1609749549728,"results":"186","hashOfConfig":"96"},{"size":2644,"mtime":1609864915771,"results":"187","hashOfConfig":"96"},{"size":219,"mtime":1609065166979,"results":"188","hashOfConfig":"96"},{"size":1517,"mtime":1609863926156,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"1wbllt2",{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"197"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"197"},"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/index.js",[],["382","383"],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/reportWebVitals.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/theme.ts",[],["384","385"],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/styles/global-styles.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/App.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Header/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/Authentication.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/StakingDeposit.tsx",["386"],"import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport {NETWORK_IDS} from 'service/WalletProviders/Metamask/constants';\n\nimport {\n    Wrapper, Section, Title, SubTitle, Total, ErrorMessage, StepsBoxes,\n    ConnectedWallet, NeedGoETH, DepositMethod, ConnectWalletButton, Faq, SecurityNotification\n} from './components';\nimport {Icon} from 'common/components';\n\nimport {STEP_BOXES} from './constants';\nimport parsedQueryString from 'common/helpers/getParsedQueryString';\nimport {notification} from 'antd';\n\nimport ModalsManager from '../ModalsManager';\nimport useModals from '../ModalsManager/useModals';\nimport {MODAL_TYPES} from '../ModalsManager/constants';\nimport WalletProvidersContext from \"../../service/WalletProviders/WalletProvidersContext\";\nimport {Spinner} from \"../../common/components\";\n\n\nconst qsObject: Record<string, any> = parsedQueryString(location.search);\nconst {network_id, deposit_to, public_key, account_id, tx_data, id_token} = qsObject;\n\nconst initialWalletInfoState = {\n    networkVersion: '',\n    networkName: '',\n    selectedAddress: '',\n    balance: '',\n};\n\nconst initialErrorState = {type: '', message: ''};\n\nconst etherscanLink = network_id === '1' ? 'https://etherscan.io/tx/' : 'https://goerli.etherscan.io/tx/';\n\nconst NotificationContent = styled.div`\n    width:350px;\n    display:flex;\n    flex-direction:column;\n`;\n\nconst NotificationContentInnerWrapper = styled.div`\n    display:flex;\n`;\n\nconst Span = styled.span`\n    width:200px;\n    overflow:hidden;\n    text-overflow:ellipsis;\n    white-space:nowrap;\n`;\n\nconst DepositConfirmed = styled.div`\n    width:858px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`;\n\nconst StakingDeposit = () => {\n    const [walletProvider, setWalletProvider] = useState(null);\n    const [walletInfo, setWalletInfo] = useState(initialWalletInfoState);\n    const [checkedTerms, setCheckedTermsStatus] = useState(false);\n    const [error, setError] = useState(initialErrorState);\n    const [stepsData, setStepsData] = useState(STEP_BOXES);\n    const [isLoadingDeposit, setDepositLoadingStatus] = useState(false);\n    const [isLoadingWallet, setLoadingWallet] = useState(false);\n    const [isDepositSuccess, setDepositSuccessStatus] = useState(false);\n    const [txHash, setTxHash] = useState('');\n    const [oneTimeWrongNetworkModal, setOneTimeWrongNetworkModal] = useState(false);\n    const [showSecurityNotification, setSecurityNotificationDisplay] = useState(true);\n    const [checkingDeposited, setCheckingDepositedStatus] = useState(false);\n    const [alreadyDeposited, setAlreadyDeposited] = useState(false);\n\n    const {showModal, hideModal, modal} = useModals();\n\n    const areNetworksEqual = network_id === walletInfo.networkVersion;\n\n    useEffect(() => {\n        document.title = 'Blox Staking - Transfers Hub';\n        const placement = 'bottomRight';\n        notification.config({placement});\n        // window.history.replaceState(null, null, window.location.pathname);\n        setTimeout(() => setSecurityNotificationDisplay(false), 5000);\n\n    }, []);\n\n    useEffect(() => {\n        if (qsObject.network_id && walletInfo.networkVersion && !areNetworksEqual) {\n            setError({type: 'networksNotEqual', message: `Please change to ${NETWORK_IDS[network_id]}`,});\n            if (!oneTimeWrongNetworkModal) {\n                setOneTimeWrongNetworkModal(true);\n                showModal({show: true, type: MODAL_TYPES.WRONG_NETWORK, params: {networkType: network_id.toString()}});\n            }\n        } else if (walletInfo.balance !== '' && Number(walletInfo.balance) < 33) {\n            setError({type: 'lowBalance', message: 'Insufficient balance in selected wallet'});\n        } else {\n            setError({type: '', message: ''});\n        }\n    }, [qsObject, walletInfo]);\n\n    useEffect(() => {\n        if (walletProvider == null) return;\n        const neededModal = walletProvider.getWarningModal();\n        if (neededModal !== undefined) {\n            setWalletProvider(null);\n            showModal({show: true, type: neededModal});\n            return\n        }\n\n        setSecurityNotificationDisplay(false);\n        if (walletProvider.showLoader()) setLoadingWallet(true);\n        connectWallet(walletProvider.providerType);\n    }, [walletProvider]);\n\n    const onWalletProviderClick = async (type: string) => {\n        if (type === 'ledger' || type === 'trezor') {\n            showModal({\n                    show: true, type: MODAL_TYPES[`${type.toUpperCase()}`], params: {\n                        onClick: () => {\n                            hideModal();\n                            setWalletProvider(new WalletProvidersContext(type, network_id));\n                        },\n                        onClose: () => {\n                            hideModal();\n                        }\n                    }\n                }\n            );\n            return\n        }\n        setWalletProvider(new WalletProvidersContext(type, network_id));\n    };\n\n    const connectWallet = async (type) => {\n        await walletProvider.connect()\n            .then(() => {\n                notification.success({\n                    message: '',\n                    description: `Successfully connected to ${type.charAt(0).toUpperCase() + type.slice(1)}`\n                });\n                setLoadingWallet(false);\n                walletProvider.subscribeToUpdate(onInfoUpdate);\n                walletProvider.subscribeToLogout(onLogout);\n                walletProvider.getInfo().then((info) => {\n                    updateWalletInfo(info)\n                });\n            }, null)\n            .catch((error) => {\n                console.log('Wallet provider connect error - ', error);\n                disconnect();\n            });\n    };\n\n    const updateWalletInfo = (info) => {\n        const {networkName, networkVersion, selectedAddress, balance} = info;\n        setWalletInfo((prevState) => ({\n            ...prevState,\n            networkName,\n            networkVersion,\n            selectedAddress: selectedAddress,\n            balance\n        }));\n    };\n\n    const onInfoUpdate = async () => updateWalletInfo(await walletProvider.getInfo());\n    const onLogout = async () => disconnect();\n\n    const checkIfAlreadyDeposited = async () => {\n        let deposited = false;\n        setCheckingDepositedStatus(true);\n        const account = await getAccount();\n        if (account) {\n            if (account.depositTxHash && account.deposited) {\n                deposited = true;\n            }\n            if (account.depositTxHash) {\n                const result = await walletProvider.getReceipt(account.depositTxHash);\n                deposited = result.status;\n            }\n        }\n        return deposited;\n    };\n\n    const showAlreadyDepositedNotification = () => {\n        notification.success({message: '', description: <div style={{padding: 8}}>\n            Your Staking Deposit was already executed. Go to Desktop App\n        </div>});\n    };\n\n    const onDepositStart = async () => {\n        const deposited = await checkIfAlreadyDeposited();\n        if (deposited) {\n            showAlreadyDepositedNotification();\n            setAlreadyDeposited(true);\n            setCheckingDepositedStatus(false);\n            return;\n        }\n\n        const onStart = async (txHash) => {\n            setTxHash(txHash);\n            setCheckingDepositedStatus(false);\n            setDepositLoadingStatus(true);\n            await sendAccountUpdate(false, txHash, () => {\n                notification.success({message: '', description:\n                <NotificationContent>\n                    Transaction hash: <br />\n                    <NotificationContentInnerWrapper>\n                        <Span>{txHash}</Span>\n                        <Icon color={'primary900'} name={'icons-export'} fontSize={'16px'} onClick={() => window.open(`${etherscanLink}${txHash}`, '_blank')}/>\n                    </NotificationContentInnerWrapper>\n                </NotificationContent>});\n                return;\n            }, () => {\n                return;\n            });\n        };\n\n        const onSuccess = async (error, txReceipt) => {\n            if (error) {\n                setCheckingDepositedStatus(false);\n                setDepositLoadingStatus(false);\n                notification.error({message: '', description: error});\n            } else if (txReceipt) {\n                if (txReceipt.status) {\n                    await sendAccountUpdate(true, txReceipt.transactionHash, () => {\n                    }, () => {\n                    });\n                    notification.success({\n                        message: '', description: <NotificationContent>\n                            Successfully deposited 32 ETH to <br />\n                            <NotificationContentInnerWrapper>\n                                <Span>{deposit_to}</Span>\n                                <Icon name={'icons-export'} color={'primary900'} fontSize={'16px'} onClick={() => window.open(`${etherscanLink}${txReceipt.transactionHash}`, '_blank')}/>\n                            </NotificationContentInnerWrapper>\n                        </NotificationContent>\n                    });\n                    setDepositSuccessStatus(true);\n                } else {\n                    setDepositLoadingStatus(false);\n                    notification.error({message: '', description: `Failed to send transaction`});\n                }\n            }\n        };\n\n        const onError = () => {\n            setCheckingDepositedStatus(false);\n        };\n\n        walletProvider.sendSignTransaction(deposit_to, tx_data, onStart, onSuccess, onError);\n    };\n\n    const disconnect = () => {\n        setWalletInfo(initialWalletInfoState);\n        setLoadingWallet(false);\n        if (walletProvider != null) {\n            walletProvider.disconnect();\n            setWalletProvider(null);\n        }\n    };\n\n    const getAccount = async () => {\n        try {\n            const res = await axios({\n                url: `${process.env.REACT_APP_API_URL}/accounts`,\n                method: 'get',\n                responseType: 'json',\n                headers: {Authorization: `Bearer ${id_token}`},\n            });\n            return res.data.filter((account) => account.id === Number(account_id))[0];\n        } catch (error) {\n            return error;\n        }\n    };\n\n    const sendAccountUpdate = async (deposited, txHash, onSuccess, onFailure) => {\n        try {\n            const res = await axios({\n                url: `${process.env.REACT_APP_API_URL}/accounts/${account_id}`,\n                method: 'patch',\n                data: {deposited: deposited, depositTxHash: txHash},\n                responseType: 'json',\n                headers: {Authorization: `Bearer ${id_token}`},\n            });\n            onSuccess(res.data);\n        } catch (error) {\n            console.log(`Error updating account - ${error}`);\n            onFailure(error);\n        }\n    };\n\n    const Loading = styled.div`        \n        display:flex;        \n        color:${({theme}) => theme.primary900};\n        width: 320px;\n        height: 16px;\n        margin-top: 8px;        \n        font-size: 11px;\n        font-weight: 500;\n    `;\n    if (network_id && deposit_to && public_key) {\n        const desktopAppLink = `blox-live://tx_hash=${txHash}&account_id=${account_id}&network_id=${network_id}&deposit_to=${deposit_to}`;\n\n        const onGoBackClick = () => {\n            const root = document.getElementById('root');\n            const newIframe = document.createElement('iframe');\n            newIframe.src=desktopAppLink;\n            newIframe.width='0px';\n            newIframe.height='0px';\n            root.appendChild(newIframe);\n        }\n\n        return (\n            <Wrapper>\n                <Title>{network_id === \"1\" ? 'Mainnet' : 'Testnet'} Staking Deposit</Title>\n                <Section>\n                    <SubTitle>Deposit Method</SubTitle>\n                    <DepositMethod>\n                        {(!isLoadingWallet && (walletInfo.balance && walletInfo.networkName && walletInfo.networkVersion && walletInfo.selectedAddress)) ?\n                            (<ConnectedWallet walletInfo={walletInfo} areNetworksEqual={areNetworksEqual}\n                                              error={error} onDisconnect={disconnect}/>) :\n                            (<ConnectWalletButton onWalletProviderClick={onWalletProviderClick} disable={isLoadingWallet}/>\n                            )}\n                        {network_id === \"5\" &&\n                        <NeedGoETH href={'https://discord.gg/wXxuQwY'} target={'_blank'}>Need GoETH?</NeedGoETH>}\n                    </DepositMethod>\n                    {error.type && <ErrorMessage>{error.message}</ErrorMessage>}\n                    {isLoadingWallet &&\n                    <Loading> <Spinner width={'17px'} margin-right={'12px'}/> Waiting for {walletProvider.providerType.charAt(0).toUpperCase() + walletProvider.providerType.slice(1)} wallet to be connected</Loading>}\n                </Section>\n                <Section>\n                    <SubTitle>Plan and Summary</SubTitle>\n                    <StepsBoxes stepsData={stepsData} setStepsData={setStepsData}\n                                checkedTerms={checkedTerms} error={error}\n                                setCheckedTermsStatus={() => setCheckedTermsStatus(!checkedTerms)}\n                                walletInfo={walletInfo}\n                                onDepositStart={onDepositStart}\n                                depositTo={deposit_to}\n                                publicKey={public_key}\n                                network_id={network_id}\n                                isLoadingDeposit={isLoadingDeposit}\n                                isDepositSuccess={isDepositSuccess}\n                                txHash={txHash}\n                                walletType={walletProvider ? walletProvider.providerType : null}\n                                alreadyDeposited={alreadyDeposited}\n                                checkingDeposited={checkingDeposited}\n                    />\n                    <Total>Total: 32 {network_id === \"1\" ? 'ETH' : 'GoETH'} + gas fees</Total>\n                </Section>\n                <Faq networkId={network_id}/>\n                <ModalsManager modal={modal} onClose={hideModal}/>\n                {showSecurityNotification && <SecurityNotification hide={() => setSecurityNotificationDisplay(false)}/>}\n                {isDepositSuccess && (\n                    <DepositConfirmed>\n                        Deposit executed &amp; confirmed! <br />\n                        <a onClick={() => onGoBackClick()} >Go back to app</a>\n                    </DepositConfirmed>\n                )}\n                {(isDepositSuccess && txHash) && (\n                    <iframe title={'depositSuccess'} width={'0px'} height={'0px'} src={desktopAppLink}/>\n                )}\n            </Wrapper>\n        );\n    }\n    return null;\n};\n\nexport default StakingDeposit;\n","/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Header/Header.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/constants.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/constants.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/useModals.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/components/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/helpers/getParsedQueryString.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/Auth/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/components/BackToDesktop.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/ModalsManager/ModalsManager.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/Authentication/components/ConnectingTo.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Section.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Title.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/SubTitle.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Total.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/NeedGoETH.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Wrapper.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ErrorMessage.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/DepositMethod.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/Auth/constants.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/BrowserNotSupported/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/TrezorModal/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectedWallet/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepsBoxes/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/DepositFinished/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepBox/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/MetaMaskNotFoundModal/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/WrongNetworkModal/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/LedgerModal/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectWalletButton/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/Auth/Auth.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/LedgerModal/LedgerModal.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectWalletButton/ConnectWalletButton.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/Faq.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/WrongNetworkModal/WrongNetworkModal.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectedWallet/ConnectedWallet.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepBox/StepBox.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/MetaMaskNotFoundModal/MetaMaskNotFoundModal.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/DepositFinished/DepositFinished.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/StepsBoxes/StepsBoxes.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/TrezorModal/TrezorModal.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/BrowserNotSupported/BrowserNotSupported.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/service.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/helpers/truncateText.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/Faq/constants.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/ConnectWalletButton/images/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CustomModal/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CustomModal/CustomModal.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/Wrapper.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/SmallText.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/Description.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Link/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/components/Title.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CopyToClipboardIcon/index.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Checkbox/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/InfoWithTooltip/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Spinner/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/UniqueUrl/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Tooltip/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Icon/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Button/index.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Link/Link.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/CopyToClipboardIcon/CopyToClipboardIcon.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Tooltip/Tooltip.js",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/ModalTemplate/ModalTemplate.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Icon/Icon.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Button/Button.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/UniqueUrl/UniqueUrl.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Spinner/Spinner.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/InfoWithTooltip/InfoWithTooltip.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/common/components/Checkbox/Checkbox.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/components/StakingDeposit/components/SecurityNotification.tsx",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/WalletProvidersContext.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Metamask/constants.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Metamask/MetaMaskStrategy.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Portis/PortisStrategy.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/Portis/constants.ts",[],"/Users/nivmuroch/Documents/backend_projects/Infra/blox-staking-web/src/service/WalletProviders/WalletProviderStrategy.ts",["387"],"import Web3 from \"web3\";\n\n\nexport abstract class WalletProviderStrategy{\n\n    protected web3: Web3;\n    protected timer=null;\n    protected infoUpdateCallback: () => void;\n    protected logoutCallback: () => void;\n\n    abstract connect();\n    abstract disconnect()\n    abstract getBalance(): Promise<string>\n    getWarningModal(): string{\n        return undefined\n    }\n    abstract info(): Record<string, any>\n    abstract sendTransaction(depositTo: string, txData: string, onStart, onSuccess, onError);\n\n    subscribeToUpdate(callback) {\n        this.infoUpdateCallback = callback;\n    }\n    subscribeToLogout(callback){\n        this.logoutCallback = callback;\n    }\n    getReceipt = async (txHash, onSuccess) => {\n        try {\n            return await this.web3.eth.getTransactionReceipt(txHash, onSuccess);\n        }\n        catch(error) {\n            return error.message;\n        }\n    };\n    protected subscribeToTransactionReceipt = (txHash, onSuccess) => {\n        const callback = (error, txReceipt) => {\n            if(error || txReceipt) {\n                clearInterval(this.timer);\n                this.timer = null;\n            }\n            if(error) {\n                onSuccess(error, null);\n            }\n            if(txReceipt) {\n                onSuccess(null, txReceipt);\n            }\n        };\n        this.timer = setInterval(() => {\n            this.web3.eth.getTransactionReceipt(txHash, callback);\n        }, 3000);\n    };\n    showLoader = (): boolean => {\n        return false;\n    }\n}\n",{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","replacedBy":"391"},{"ruleId":"388","replacedBy":"389"},{"ruleId":"390","replacedBy":"391"},{"ruleId":"392","severity":1,"message":"393","line":358,"column":25,"nodeType":"394","endLine":358,"endColumn":61},{"ruleId":"395","severity":1,"message":"396","line":1,"column":8,"nodeType":"397","messageId":"398","endLine":1,"endColumn":12},"no-native-reassign",["399"],"no-negated-in-lhs",["400"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Web3' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]